/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fakemeta>
#include <amxmisc>
#include <hamsandwich>
#include <codmod>

new const perk_name[] = "Quad Damage";
new const perk_desc[] = "Po uzyciu na LW sekund mozesz zadac 4 razy wiecej obrazen. Perk niszczy sie po uzyciu!"
new bool: ma_perk[33], CzasTrwania, wartosc_perku[33], bool: perk_uzyty[33];

new SoundStart[] = "misc/quad_damage_start.wav"
new SoundEnd[] = "misc/quad_damage_end.wav"
public plugin_init() 
{
	register_plugin(perk_name, "1.0", "Hleb")
	cod_register_perk(perk_name, perk_desc, 15, 30)
	register_forward(FM_PlayerPreThink, "Client_PreThink")
	RegisterHam(Ham_TakeDamage, "player", "TakeDamage");
}
public cod_perk_enabled(id, wartosc)
{
	if(random_num(1, 3) != 1)
		return COD_STOP
		
	ma_perk[id] = true;
	wartosc_perku[id] = wartosc
	perk_uzyty[id] = false
	return COD_CONTINUE
}
public cod_perk_disabled(id)
{
	ma_perk[id] = false;
	remove_task(id+44)
}
public client_disconnect(id)
{
	remove_task(id+44)
}
public plugin_precache()
{
	precache_sound(SoundStart)
	precache_sound(SoundEnd)
}
public Client_PreThink(id)
{
	if(task_exists(id+44) && ma_perk[id])
	{
		new Float: Trwaj = CzasTrwania/2.0;
		client_print(id, print_center, "Quad Damage: %i", floatround(Trwaj, floatround_ceil))
		Display_Fade(id, 1<<14, 1<<4 ,1<<16, 255, 255, 255, 40);
		if(CzasTrwania == 5 || CzasTrwania == 3 || CzasTrwania == 1)
			Display_Fade(id, 1<<14, 1<<4 ,1<<16, 255, 255, 255, 0);
		if(CzasTrwania == 1)
			cod_set_user_perk(id, 0)
	}
}
public cod_perk_used(id)
{
	if(perk_uzyty[id])
		return PLUGIN_CONTINUE
	new name[33];	
	perk_uzyty[id] = true;	
	client_cmd(id, "speak %s", SoundStart)
	get_user_name(id, name, charsmax(name))
	set_hudmessage(255, 255, 255, -1.0, 0.25, 0, 6.0, 7.0);
	ShowSyncHudMsg(0, CreateHudSyncObj(), "Gracz %s uruchomil perk: Quad Damage", name);
	set_task(0.5, "QuadDamage", id+44, _, _, "a", CzasTrwania = wartosc_perku[id]*2);
	return PLUGIN_CONTINUE
	
}
public QuadDamage(id)
{
	id-=44
	CzasTrwania--
	if(CzasTrwania == 6)
		client_cmd(id,"speak %s", SoundEnd)
}
public TakeDamage(this, idinflictor, idattacker, Float:damage, damagebits)
{
	if(!ma_perk[idattacker])
		return HAM_IGNORED
	if(!is_user_connected(idattacker))
		return HAM_IGNORED
	if(!(task_exists(idattacker+44)))
		return HAM_IGNORED
		
	SetHamParamFloat(4, damage*4.0)
	
	return HAM_IGNORED
}
stock Display_Fade(id,duration,holdtime,fadetype,red,green,blue,alpha)
{
	message_begin( MSG_ONE, get_user_msgid("ScreenFade"),{0,0,0},id );
	write_short( duration );
	write_short( holdtime );	
	write_short( fadetype );	
	write_byte ( red );		
	write_byte ( green );		
	write_byte ( blue );	
	write_byte ( alpha );	
	message_end();
}
