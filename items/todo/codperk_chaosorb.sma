/* Plugin generated by AMXX-Studio */


#include <amxmodx>
#include <engine>
#include <fakemeta> 
#include <fun>
#include <cstrike>
#include <amxmisc>
#include <codmod>

#define AUTHOR "J River"

#define MAX 32			 //Max number of valid player entities

new const perk_name[] = "Chaos Orb";
new const perk_desc[] = "Explodujesz w promieniu LW po smierci zadajac 75(+inteligencja obrazen)";

new bool:ma_perk[33]
new player_b_explode[33] = 0	//Radius to explode upon death

new sprite_white = 0
new sprite_fire = 0
new sprite_gibs = 0

new gmsgDeathMsg
new gmsgScoreInfo

public plugin_init() 
{
	register_plugin(perk_name, "1.0", AUTHOR);
	
	cod_register_perk(perk_name, perk_desc, 150, 400);
	
	gmsgScoreInfo = get_user_msgid("ScoreInfo") 
	
	gmsgDeathMsg = get_user_msgid("DeathMsg")
	
	set_msg_block ( gmsgDeathMsg, BLOCK_SET ) 
	
	register_event("DeathMsg","DeathMsg","ade") 
}
public cod_perk_enabled(id, wartosc)
{
	client_print(id, print_chat, "Perk stworzony przez J River")
	ma_perk[id] = true;
	player_b_explode[id] = wartosc;
}
public cod_perk_disabled(id)
{
	player_b_explode[id] = 0	//Radius to explode upon death
	ma_perk[id] = false;
}	

public plugin_precache()
{ 
	sprite_white = precache_model("sprites/white.spr") 
	sprite_fire = precache_model("sprites/explode1.spr") 
	sprite_gibs = precache_model("models/hgibs.mdl")
}
/* ==================================================================================================== */
public DeathMsg()
{
	new weaponname[20]
	new kid = read_data(1)
	new vid = read_data(2) 
	read_data(4,weaponname,31)

	if (is_user_connected(kid) && is_user_connected(vid) && get_user_team(kid) != get_user_team(vid))
		add_bonus_explode(vid)
}
public show_deadmessage(killer_id,victim_id,headshot,weaponname[])
{
	if (!(killer_id==victim_id && !headshot && equal(weaponname,"world")))
	{
		message_begin( MSG_ALL, gmsgDeathMsg,{0,0,0},0)
		write_byte(killer_id)
		write_byte(victim_id)
		write_byte(headshot)
		write_string(weaponname)
		message_end()
	}
}
public add_bonus_explode(id)
{
	if (player_b_explode[id] > 0)
	{
		
		new origin[3] 
		get_user_origin(id,origin) 
		explode(origin,id,0)
		
		
		for(new a = 0; a < MAX; a++) 
		{ 
			if (!is_user_connected(a) || !is_user_alive(a) || get_user_team(a) == get_user_team(id))
				continue	
			
			new origin1[3]
			get_user_origin(a,origin1) 
			
			if(get_distance(origin,origin1) < player_b_explode[id] + cod_get_user_intelligence( id, 1, 1, 1 )*2)
			{
				new dam = 75-(cod_get_user_stamina(a, 1, 1, 1)*2)
				
				if (get_user_health(a) - dam < 5)
					UTIL_Kill(id,a,"grenade")	
				else
				{
					set_user_health(a,get_user_health(a)-dam)
					Display_Fade(id,2600,2600,0,255,0,0,15)
				}
			}
		}
	}
}

public explode(vec1[3],playerid, trigger)
{ 
	message_begin( MSG_BROADCAST,SVC_TEMPENTITY,vec1) 
	write_byte( 21 ) 
	write_coord(vec1[0]) 
	write_coord(vec1[1]) 
	write_coord(vec1[2] + 32) 
	write_coord(vec1[0]) 
	write_coord(vec1[1]) 
	write_coord(vec1[2] + 1000)
	write_short( sprite_white ) 
	write_byte( 0 ) 
	write_byte( 0 ) 
	write_byte( 3 ) 
	write_byte( 10 ) 
	write_byte( 0 ) 
	write_byte( 188 ) 
	write_byte( 220 ) 
	write_byte( 255 ) 
	write_byte( 255 ) 
	write_byte( 0 ) 
	message_end() 
	
	message_begin( MSG_BROADCAST,SVC_TEMPENTITY) 
	write_byte( 12 ) 
	write_coord(vec1[0]) 
	write_coord(vec1[1]) 
	write_coord(vec1[2]) 
	write_byte( 188 ) 
	write_byte( 10 ) 
	message_end() 
	
	message_begin( MSG_BROADCAST,SVC_TEMPENTITY,vec1) 
	write_byte( 3 ) 
	write_coord(vec1[0]) 
	write_coord(vec1[1]) 
	write_coord(vec1[2]) 
	write_short( sprite_fire ) 
	write_byte( 65 ) 
	write_byte( 10 ) 
	write_byte( 0 ) 
	message_end() 
	
	message_begin(MSG_BROADCAST,SVC_TEMPENTITY,{0,0,0},playerid) 
	write_byte(107) 
	write_coord(vec1[0]) 
	write_coord(vec1[1]) 
	write_coord(vec1[2]) 
	write_coord(175) 
	write_short (sprite_gibs) 
	write_short (25)  
	write_byte (10) 
	message_end() 
	if (trigger == 1)
	{
		set_user_rendering(playerid,kRenderFxNone, 0,0,0, kRenderTransAdd,0) 
	}
}

/* ==================================================================================================== */

stock Display_Fade(id,duration,holdtime,fadetype,red,green,blue,alpha)
{
	message_begin( MSG_ONE,get_user_msgid("ScreenFade"),{0,0,0},id )
	write_short( duration )	// Duration of fadeout
	write_short( holdtime )	// Hold time of color
	write_short( fadetype )	// Fade type
	write_byte ( red )		// Red
	write_byte ( green )		// Green
	write_byte ( blue )		// Blue
	write_byte ( alpha )	// Alpha
	message_end()
}
public UTIL_Kill(attacker,id,weapon[])
{
	
	if(get_user_team(attacker)!=get_user_team(id))
		set_user_frags(attacker,get_user_frags(attacker) +1);
	if(get_user_team(attacker)==get_user_team(id))
		set_user_frags(attacker,get_user_frags(attacker) -1);
		
	if (cs_get_user_money(attacker) + 150 <= 16000)
		cs_set_user_money(attacker,cs_get_user_money(attacker)+150)
	else
		cs_set_user_money(attacker,16000)
	
	cod_set_user_xp(id,cod_get_user_xp(id)+50)
	user_kill(id,1) 
	message_begin( MSG_ALL, gmsgDeathMsg,{0,0,0},0) 
	write_byte(attacker) 
	write_byte(id) 
	write_byte(0) 
	write_string(weapon) 
	message_end() 
	
	message_begin(MSG_ALL,gmsgScoreInfo) 
	write_byte(attacker) 
	write_short(get_user_frags(attacker)) 
	write_short(get_user_deaths(attacker)) 
	write_short(0) 
	write_short(get_user_team(attacker)) 
	message_end() 
	
	message_begin(MSG_ALL,gmsgScoreInfo) 
	write_byte(id) 
	write_short(get_user_frags(id)) 
	write_short(get_user_deaths(id)) 
	write_short(0) 
	write_short(get_user_team(id)) 
	message_end() 
	
	new kname[32], vname[32], kauthid[32], vauthid[32], kteam[10], vteam[10];
	
	get_user_name(attacker, kname, 31);
	get_user_team(attacker, kteam, 9);
	get_user_authid(attacker, kauthid, 31);
	
	get_user_name(id, vname, 31);
	get_user_team(id, vteam, 9);
	get_user_authid(id, vauthid, 31);
	
	log_message("^"%s<%d><%s><%s>^" killed ^"%s<%d><%s><%s>^" with ^"%s^"", 
	kname, get_user_userid(attacker), kauthid, kteam, 
	vname, get_user_userid(id), vauthid, vteam, weapon);
	
	
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1045\\ f0\\ fs16 \n\\ par }
*/
