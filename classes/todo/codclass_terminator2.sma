/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <codmod>
#include <hamsandwich>
#include <engine>
#include <fakemeta>

new bool:ma_klase[33];
new g_iMaxPlayers;

new const nazwa[] = "Terminator";
new const opis[] = "80% widocznosci z AWP, otrzymuje 50% mniej obrazen przy trafieniu w glowe";
new const bronie = 1<<CSW_AWP | 1<<CSW_FAMAS;
new const zdrowie = 20;
new const kondycja = 10;
new const inteligencja = 0;
new const wytrzymalosc = 10;
new const niewidzialnosc = 0;
new const bonus_niewidzialnosci = 0;

new rendermode[33];
new renderfx[33];
new Float:renderamt[33];

native cod_get_class_invisible(id);

public plugin_init() 
{
	register_plugin(nazwa, "1.0", "O'Zone");
	
	cod_register_class(nazwa, opis, bronie, zdrowie, kondycja, inteligencja, wytrzymalosc, niewidzialnosc, bonus_niewidzialnosci);
	RegisterHam( Ham_TakeDamage , "player" , "HamTakeDamage", 0 );
	register_event("CurWeapon", "Niewidzialnosc", "be", "1=1");
	g_iMaxPlayers = get_maxplayers(); 
}

public plugin_precache()
{
	precache_model("models/cod_slowexp/vip/v_goldawp.mdl");
	precache_model("models/cod_slowexp/vip/p_goldawp.mdl");
}

public cod_class_enabled(id)
	ma_klase[id] = true;

public cod_class_disabled(id)
{
	set_rendering(id,kRenderFxNone, 0, 0, 0, kRenderTransAlpha, 255);
	ma_klase[id] = false;	
}

public HamTakeDamage(iVictim, iInflictor, iAttacker, Float:Damage, DmgBits) 
{ 
	if (!ma_klase[iVictim])
		return HAM_IGNORED;
		
	const m_LastHitGroup = 75; 
	
	if (( 1 <= iAttacker <= g_iMaxPlayers) && (get_pdata_int(iVictim, m_LastHitGroup ) == HIT_HEAD) && pev(iVictim, pev_dmg_take )) 
	{ 
		SetHamParamFloat(4,Damage*0.5);
		return HAM_HANDLED; 
	} 
	return HAM_IGNORED; 
}

public Niewidzialnosc(id)
{
	if (!ma_klase[id])
	return;

	new render = cod_get_class_invisible(id);
	if ( read_data(2) == CSW_AWP )
	{
		rendermode[id] = pev(id, pev_rendermode);
		renderfx[id] = pev(id, pev_renderfx);
		pev(id, pev_renderamt, renderamt[id]);
		set_rendering(id,kRenderFxNone, 0, 0, 0, kRenderTransAlpha, 205-render);
		set_pev(id,pev_viewmodel2,"models/cod_slowexp/vip/v_goldawp.mdl")
		set_pev(id,pev_weaponmodel2,"models/cod_slowexp/vip/p_goldawp.mdl")
	}
	else
	{
		set_pev(id, pev_rendermode, rendermode[id]);
		set_pev(id, pev_renderfx, renderfx[id]);
		set_pev(id, pev_renderamt, renderamt[id]);
	}
}
