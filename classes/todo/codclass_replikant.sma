/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <codmod>
#include <fakemeta>
#include <engine>
#include <hamsandwich>
#include <cstrike>
#include <ColorChat>

new const nazwa[] = "Replikant";
new const opis[] = "Ma 2 repliki odbijajace polowe obrazen, podwojny skok";
new const bronie = 1<<CSW_MP5NAVY;
new const zdrowie = 30;
new const kondycja = 20;
new const inteligencja = 0;
new const wytrzymalosc = 5;
new const niewidzialnosc = 0;
new const bonus_niewidzialnosci = 0;

new ilosc_kukiel[33];
new poprzednia_replika[33];
new sprite_blast;
new bool:ma_klase[33];
new skoki[33];

public plugin_init() 
{
	register_plugin(nazwa, "1.0", "O'Zone");
	
	cod_register_class(nazwa, opis, bronie, zdrowie, kondycja, inteligencja, wytrzymalosc, niewidzialnosc, bonus_niewidzialnosci);
	
	RegisterHam(Ham_TakeDamage, "info_target", "TakeDamage");
	
	RegisterHam(Ham_Spawn, "player", "Spawn", 1);
	
	register_forward(FM_CmdStart, "MultiJump");
	
	register_event("HLTV", "NowaRunda", "a", "1=0", "2=0");
}

public plugin_precache()
	sprite_blast = precache_model("sprites/dexplo.spr");

public cod_class_enabled(id)
{
	new dostepna = 35;
	if (cod_get_class_level(id)<dostepna)
	{
		ColorChat(id, GREEN, "[COD:MW]^x01 Aby uzywac tej klasy musisz zdobyc^x04 %i^x01 poziom na dowolnej klasie!", dostepna);
		return COD_STOP;
	}
	ma_klase[id] = true;
	ilosc_kukiel[id] = 2;
	return COD_CONTINUE;
}

public cod_class_disabled(id)
	ma_klase[id] = false;

public cod_class_skill_used(id)
{
	if (!ilosc_kukiel[id])
	{
		client_print(id, print_center, "Wykorzystales wszystkie repliki!");
		return;
	}
	
	if (poprzednia_replika[id]+5.0>get_gametime())
	{
		client_print(id, print_center,"Replike mozesz postawic raz na 5 sek.");
		return;
	}
	poprzednia_replika[id] = floatround(get_gametime());
	
	new Float:OriginGracza[3], Float:OriginKukly[3], Float:VBA[3];
	entity_get_vector(id, EV_VEC_origin, OriginGracza);
	VelocityByAim(id, 50, VBA);
	
	VBA[2] = 0.0;
	
	for(new i=0; i < 3; i++)
		OriginKukly[i] = OriginGracza[i]+VBA[i];
		
	if (get_distance_f(OriginKukly, OriginGracza) < 40.0)
	{
		client_print(id, print_center, "Musisz postawic replike dalej!");
		return;
	}
	
	new model[55], model2[32], Float:AngleKukly[3],
	
	SekwencjaKukly = entity_get_int(id, EV_INT_gaitsequence);
	SekwencjaKukly = SekwencjaKukly == 3 || SekwencjaKukly == 4? 1: SekwencjaKukly;
	cs_get_user_model(id, model2, 31);
	format(model, 54, "models/player/%s/%s.mdl", model2, model2);
	entity_get_vector(id, EV_VEC_angles, AngleKukly);
	
	AngleKukly[0] = 0.0;
	
	new ent = create_entity("info_target");
	
	entity_set_string(ent, EV_SZ_classname, "Kukla");
	entity_set_model(ent, model);
	entity_set_vector(ent, EV_VEC_origin, OriginKukly);
	entity_set_vector(ent, EV_VEC_angles, AngleKukly);
	entity_set_vector(ent, EV_VEC_v_angle, AngleKukly);
	entity_set_int(ent, EV_INT_sequence, SekwencjaKukly);
	entity_set_int(ent, EV_INT_solid, SOLID_BBOX);
	entity_set_float(ent, EV_FL_health, 300.0);
	entity_set_float(ent, EV_FL_takedamage, DAMAGE_YES);
	entity_set_size(ent, Float:{-16.0,-16.0, -36.0}, Float:{16.0,16.0, 40.0});
	entity_set_int(ent, EV_INT_iuser1, id);
	
	ilosc_kukiel[id]--;
}

public TakeDamage(this, idinflictor, idattacker, Float:damage, damagebits)
{
	if (!is_user_alive(idattacker))
		return HAM_IGNORED;
		
	new classname[33];
	entity_get_string(this, EV_SZ_classname, classname, 32);
	
	if (!equal(classname, "Kukla")) 
		return HAM_IGNORED;
	
	new owner = entity_get_int(this, EV_INT_iuser1);
	
	if (get_user_team(owner) == get_user_team(idattacker))
		return HAM_SUPERCEDE;
		
	new perkname[33];
	cod_get_perk_name(idattacker, perkname, 32);
	new bool:bez_obrazen = get_user_weapon(idattacker) == CSW_KNIFE && damagebits & DMG_BULLET
	
	if (!bez_obrazen && !(equal(perkname, "Pogromca Replik")))
		cod_inflict_damage(owner, idattacker, damage*0.5, 0.0, this, damagebits);
	
	new Float:fOrigin[3], iOrigin[3];
	
	entity_get_vector(this, EV_VEC_origin, fOrigin);
	
	FVecIVec(fOrigin, iOrigin);
	
	if (equal(perkname, "Pogromca Replik"))
		damage = damage*2
	
	if (damage > entity_get_float(this, EV_FL_health))
	{
		if (!bez_obrazen)
		{
			new entlist[33];
			new numfound = find_sphere_class(this, "player", 190.0, entlist, 32);
			
			for (new i=0; i < numfound; i++)
			{		
				new pid = entlist[i];
				
				if (!is_user_alive(pid) || get_user_team(owner) == get_user_team(pid))
					continue;
				cod_inflict_damage(owner, pid, 50.0, 0.0, this, (1<<24));
			}
		}
	
		message_begin(MSG_BROADCAST,SVC_TEMPENTITY, iOrigin);
		write_byte(TE_EXPLOSION);
		write_coord(iOrigin[0]);
		write_coord(iOrigin[1]);
		write_coord(iOrigin[2]);
		write_short(sprite_blast);
		write_byte(32); 
		write_byte(20); 
		write_byte(0);
		message_end();
	}
	
	return HAM_IGNORED;
}

public Spawn(id)
	if (is_user_alive(id) && ma_klase[id])
		ilosc_kukiel[id] = 2;

public NowaRunda()
	remove_entity_name("Kukla")

public MultiJump(id, uc_handle)
{
	if (!is_user_alive(id) || !ma_klase[id])
		return FMRES_IGNORED;

	new flags = pev(id, pev_flags);

	if ((get_uc(uc_handle, UC_Buttons) & IN_JUMP) && !(flags & FL_ONGROUND) && !(pev(id, pev_oldbuttons) & IN_JUMP) && skoki[id])
	{
		skoki[id]--;
		new Float:velocity[3];
		pev(id, pev_velocity,velocity);
		velocity[2] = random_float(265.0,285.0);
		set_pev(id, pev_velocity,velocity);
	}
	else if (flags & FL_ONGROUND)
		skoki[id] = 1;

	return FMRES_IGNORED;
}
