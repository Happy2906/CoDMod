/* Plugin generated by AMXX-Studio */
//
// 
// AMX Poker - by commonbullet
// *****************************
//
// Credits:
// ===========
//
// * Inspired in Johnny's BlackJack AMX Plugin idea
//   http://djeyl.net/forum/index.php?showtopic=10455
//   - Ported to AMXMODX by Lord Destros
//   http://www.amxmodx.org/forums/viewtopic.php?t=16851
//
// * Dealing & Hand Validation functions based on 
//   Kevin Kessler's Java Poker applet
//   http://javaboutique.internet.com/Poker/
//
// * Whoever made that Video Poker game for my cheap cell phone
//
//

#include <amxmodx>
#include <amxmisc>
#include <cstrike>

#define H_ROYAL_FLUSH 1
#define	H_STRAIGHT_FLUSH 2
#define	H_FOUR_OF_A_KIND 3
#define	H_FULL_HOUSE 4
#define	H_FLUSH 5
#define	H_STRAIGHT 6
#define	H_THREE_OF_A_KIND 7
#define	H_TWO_PAIR 8
#define	H_ONE_PAIR 9
#define	H_HIGH_CARD 10

#define MESSAGE_HEAD "[AMX POKER]"
#define MENU_HEAD "\w[AMX POKER]"

#define BET_MIN_VALUE 10
#define HIDDEN_FACE "\rX "


new g_SuitTag[4][] = {"\d","\y","\r","\w"}

new g_Cards[13][] = {"2","3","4","5","6","7","8","9","10","J","Q","K","A"}

new g_Hands[11][] = {
	"",
	"\rRoyal Straight Flush",
	"\rStraigth Flush",
	"\rFour of a Kind",
	"\rFull House",
	"\rFlush",
	"\yStraight",
	"\yThree of a Kind",
	"\yTwo Pair",
	"\wJacks or Better",
	"\dEmpty Hand"
}

new g_HandScore[11] = {0,500,250,125,40,25,20,15,5,1,0}

new bool:g_Deck[32][4][13]
new bool:g_FaceHidden[32][5]
new bool:g_Draw[32][5]
new g_PlayerCardValue[32][5]
new g_PlayerCardSuit[32][5]
new g_BetAmount[32]

new bool:g_NewRound

public plugin_init() {
	
	register_plugin("AMX POKER", "0.4", "commonbullet")
	
	register_clcmd("amx_poker", "poker_start")
	register_clcmd("say poker", "poker_start")
	
	register_cvar("amx_poker_enabled","1")
	register_cvar("amx_poker_deadonly","1")
	
	register_menucmd(register_menuid("menubet"),1023,"set_bet")
	register_menucmd(register_menuid("menudeal"),1023,"set_deal")
	register_menucmd(register_menuid("menuscore"),1023,"poker_restart")
	
	register_event("SendAudio", "end_round", "a", "2&%!MRAD_terwin", "2&%!MRAD_ctwin", "2&%!MRAD_rounddraw")
	
}

public poker_start(id){	
	
	new player_cash 
	
	if (!get_cvar_num("amx_poker_enabled"))
		client_print(id,print_chat,"%s The plugin is currently disabled.", MESSAGE_HEAD)
	
	else if (is_user_alive(id) && get_cvar_num("amx_poker_deadonly"))
		client_print(id,print_chat,"%s Pay attention to CS now!", MESSAGE_HEAD)
	
	else {
		player_cash = cs_get_user_money(id)
		if (player_cash < BET_MIN_VALUE)
			client_print(id,print_chat,"%s You haven't got enough money to bet.", MESSAGE_HEAD)
		
		else 
			menu_bet(id)
	}
		
	return PLUGIN_HANDLED

}

// ******* AMX POKER ENGINE

public poker_deal(ind,pos[]){
	
	new bool:cardtaken
		
	for (new i=0;i<5;i++){		
		cardtaken = false
		
		if (!pos[i])
			continue
		
		while (cardtaken!=true){			
			new suit = random_num(0,3)
			new card = random_num(0,12)
			
			if (!g_Deck[ind][suit][card]){
				g_PlayerCardValue[ind][i] = card
				g_PlayerCardSuit[ind][i] = suit
				g_Deck[ind][suit][card] = true
				cardtaken = true
			}
		}
	}	
}

public reset_deck(ind){
	for (new s=0; s<4; s++){
		for (new c=0;c<13 ;c++)
			g_Deck[ind][s][c] = false
	}
	for (new i=0;i<5;i++){
		g_Draw[ind][i] = false
	}		
}

public check_hand(ind){
	
	new temp
	new bool:checkit
	new bool:score[10]
	new value[5]
	new suit[5]
	
	// copy arrays
	// so they can be altered
	// and they're easier to write :p
	for (new i=0; i<5; i++)
		value[i] = g_PlayerCardValue[ind][i]
	for (new i=0; i<5; i++)
		suit[i] = g_PlayerCardSuit[ind][i]
	
	//----- Sort Cards
	for (new i=0;i<4;i++)
		for (new j=1;j<5-i;j++){
			if (value[j-1]>value[j]){
				temp = value[j-1]
				value[j-1] = value[j]
				value[j] = temp
			}
		}
		
	//----- Check for Flush
	checkit = true
	temp = suit[0] 
	for (new i=1;i<5;i++)
		if (suit[i]!=temp){
			checkit = false
			break
		}
	score[H_FLUSH] = checkit
	
	//----- Check for Straight
	checkit = true
	
	if (!((value[0]==0) && (value[1]==1) && (value[2]==2) && (value[3]==3) && (value[4]==12))){ // Ace as lower card case
		for (new i=1;i<5;i++){	
			if (value[i]!=value[i-1]+1){
				checkit = false
				break
			}
		}
	}
	if (checkit){
		score[H_STRAIGHT] = true
		if(score[H_FLUSH])
			score[H_STRAIGHT_FLUSH] = true
		if(value[0]>7 && score[H_FLUSH])
			score[H_ROYAL_FLUSH] = true
	}
	
	// returns if current if
	// player's hand is on royal flush, straight flush
	// levels
	if (score [H_ROYAL_FLUSH])
		return H_ROYAL_FLUSH
	if (score[H_STRAIGHT_FLUSH])
		return H_STRAIGHT_FLUSH
	
	
	//----- Check for 4 of a kind
	if (((value[0]==value[1])&&(value[0]==value[2])&&(value[0]==value[3]))||
              ((value[1]==value[2])&&(value[1]==value[3])&&(value[1]==value[4])))
		return H_FOUR_OF_A_KIND
	
	
	
	//----- Check for 3 of a kind
	checkit = false
	temp = -1 //will store 3 of a kind card value if it exists
	for (new i=2;i<5;i++)
		if ((value[i-2] == value[i-1]) && (value[i-1]==value[i])){
			checkit = true
			temp = value[i]
			break
		}
		
	if (checkit)
		score[H_THREE_OF_A_KIND] = true
	
	//----- Check for pairs
	
	checkit = false
	
	for (new i=1;i<5;i++){
		if ((value[i-1] == value[i]) && (value[i]!=temp)){
			if (value[i]>8)
				score[H_ONE_PAIR] = true
			
			if(checkit){
				score[H_TWO_PAIR] = true
				break
			}
			else
				checkit = true
		}
	}
	
	if (score[H_THREE_OF_A_KIND] && checkit)
		return H_FULL_HOUSE	
	if (score[H_FLUSH])
		return H_FLUSH		
	if (score[H_STRAIGHT])
		return H_STRAIGHT	
	if (score[H_THREE_OF_A_KIND])
		return H_THREE_OF_A_KIND
	if (score[H_TWO_PAIR])
		return H_TWO_PAIR
	if (score[H_ONE_PAIR])
		return H_ONE_PAIR
	
	return H_HIGH_CARD
	
	
}

// ******* AMX POKER MENUS

public get_hand_string(str[],ind){
	
	for (new i = 0; i< 5; i++){
		
		if (g_FaceHidden[ind][i]){
			strcat(str,HIDDEN_FACE,25)
			continue;
		}
		
		new cs[6]
		format(cs,5,"%s%s ",g_SuitTag[g_PlayerCardSuit[ind][i]],g_Cards[g_PlayerCardValue[ind][i]])
		strcat (str,cs,25)		
	}		
}


public menu_bet(id){
	
	new player_cash = cs_get_user_money(id)
	new menucontent[256]
	new bets[128]
	new menukeys	
	
	reset_deck (id-1)
	
	for (new i = 0; i<5;i++){
		new bet[12]
		new betnum = BET_MIN_VALUE * (i+1)
		new tag[6]
		
		if (player_cash - (betnum)>=0){
			menukeys |= (1<<i)
			format (tag,5,"^n\w")
		}
		else
			format (tag,5,"^n\d")
		
		format (bet,11,"%s%d .%d",tag,(i+1),betnum)
		strcat(bets,bet,127)
		
	}
	
	format(menucontent,255,"%s^n\ySet your bet:\w%s",MENU_HEAD,bets)
	menu_bottom(menucontent,255,menukeys)	
	show_menu(id,menukeys,menucontent,30,"menubet")
	return PLUGIN_HANDLED
	
}

public set_bet (id,key){
	
	new ind = id - 1
	new pos[5] = {1,1,1,1,1}
	
	if (key<5){
		g_BetAmount[ind] = BET_MIN_VALUE * (key + 1)	
		poker_deal(ind,pos)
		menu_deal(id)
	}
	
	return PLUGIN_HANDLED
	
}

public menu_deal(id){
	
	new handstr[25]
	new menucontent[256]
	new menukeys
	
	get_hand_string(handstr,id-1)
	menukeys = (1<<0)|(1<<1)|(1<<2)|(1<<3)|(1<<4)|(1<<5)
	
	format (menucontent,255,"%s^n\yYour Hand:^n%s^n^n\wPress 1-5 to change cards^n6. Draw",MENU_HEAD,handstr)
	menu_bottom (menucontent,254,menukeys)
	show_menu(id,menukeys,menucontent,30,"menudeal")
	
	return PLUGIN_HANDLED
	
}

public set_deal(id,key){	
	
	new ind = id - 1
	if (key<5){
		g_FaceHidden[ind][key]=!g_FaceHidden[ind][key]
		menu_deal(id)
	}
	if (key==5){
		new bool:pos[5]
		for (new i=0;i<5;i++)
			pos[i] = g_FaceHidden[ind][i]
		poker_deal(ind,pos)
		
		new idarray[1]
		idarray[0] = id
		
		if (g_NewRound==true){
			new tempmenucontent[128]
			format (tempmenucontent,127,"%s^n^n\wCS Respawn^n\rWaiting until your cash is updated.",MENU_HEAD)
			show_menu (id,1<<9,tempmenucontent,15)			
			set_task (4.3,"menu_score",id,idarray,1)
		}
		else
			menu_score(idarray)
		
	}
	return PLUGIN_HANDLED
	
}

public menu_score(idarray[1]){
	
	new id = idarray[0]
	new menucontent[256]
	new scoremsg[32]
	new handstr[24]
	new colorbetagain[3]
	new colorbetsame[3]
	new bool:maybet
	new menukeys
	new factor
	new score
	new current_cash
	new ind = id-1	
	
	g_NewRound = false
	score = check_hand(id-1)	
	
	for (new i=0;i<5;i++)
		g_FaceHidden[ind][i] = false
		
	get_hand_string(handstr,ind)
	current_cash = cs_get_user_money (id)
	
	factor = (g_BetAmount[ind] * g_HandScore[score]) - g_BetAmount[ind]
		
	if (factor > 0){
		format(scoremsg,31,"\yYou have won $%d.",factor)
		cs_set_user_money(id,current_cash + factor)
	}
	else if (factor == 0) {
		format(scoremsg,31,"\yYou broke even.")
	}
	else {
		format(scoremsg,31,"\rYou have lost $%d.",factor * -1)
		cs_set_user_money(id,current_cash + factor)
	}
	
	current_cash = cs_get_user_money (id)
	
	
	if (current_cash - BET_MIN_VALUE >= 0){
		format(colorbetagain,2,"\w")
		menukeys |= (1<<1)
		maybet = true
	}
	else
		format(colorbetagain,2,"\d")
	
	if (current_cash - g_BetAmount[ind] >= 0){
		format(colorbetsame,2,"\w")
		menukeys |= (1<<0)
		maybet = true
	}
	else
		format(colorbetsame,2,"\d")
	
	format(menucontent,254,"%s^n%s^n%s^n%s^n^n%s1. Bet Same Amount ($%d)^n%s2. Bet",MENU_HEAD,g_Hands[score],handstr,scoremsg,colorbetsame,g_BetAmount[id-1],colorbetagain)
	
	if (!maybet)
		strcat(menucontent,"^n\rYou are broken",254)
	
	menu_bottom (menucontent,254,menukeys)	
	show_menu(id,menukeys,menucontent,30,"menuscore")
	
	return PLUGIN_HANDLED
	
}

public poker_restart(id,key){
	
	new ind = id-1
	
	if (key!=9){
		
		if (is_user_alive(id) && get_cvar_num("amx_poker_deadonly"))
			client_print(id,print_chat,"%s See you when you die again!", MESSAGE_HEAD)
	
		else if (key==1)
			menu_bet(id)
		else if (key==0){
			new pos[5] = {1,1,1,1,1}				
			reset_deck(ind)
			poker_deal(ind,pos)
			menu_deal(id)
		}		
	}
	
	return PLUGIN_HANDLED
}
		

public menu_bottom (menucont[],len,&menukeys){	
	strcat (menucont,"^n^n\w0. Exit",len)
	menukeys |= (1<<9)
}

public end_round (){
	g_NewRound = true
	set_task (6.0,"clear_newround")
}
public clear_newround(){
	g_NewRound = false
}
